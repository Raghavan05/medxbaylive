/**
 * This code was generated by Builder.io.
 */
import React from "react";
import LocationCard from "./LocationCard";
import InsuranceCard from "./InsuranceCard";
import AwardCard from "./AwardCard";
import LanguageCard from "./LanguageCard";
import { useState, useEffect } from "react";
import profileImage from "../Assets/profileimg.png";
import axios from "axios";

const bufferToBase64 = (buffer) => {
  if (buffer?.type === "Buffer" && Array.isArray(buffer?.data)) {
    const bytes = new Uint8Array(buffer.data);
    let binary = "";
    for (let i = 0; i < bytes.length; i++) {
      binary += String.fromCharCode(bytes[i]);
    }
    return `data:image/jpeg;base64,${btoa(binary)}`;
  } else {
    console.error("Unexpected buffer type:", typeof buffer);
    return "";
  }
};

const DoctorInfo = () => {
  const [profileimg, setProfileimage] = useState("");
  const [doctor, setDoctor] = useState([]);
  const [insurance, setInsurance] = useState([]);
  const [setBlogs] = useState([]);
  const [verificationStatus, setVerificationStatus] = useState("");
  const fetchDoctorDetails = async () => {
    try {
      const response = await axios.get(
        `${process.env.REACT_APP_BASE_URL}/doctor/profile/update`,
        { withCredentials: true }
      );
      const doctorData = response.data;

      console.log(doctorData);
      if (doctorData.doctor.dateOfBirth) {
        const date = new Date(doctorData.doctor.dateOfBirth);
        const formattedDate = `${String(date.getDate()).padStart(
          2,
          "0"
        )}-${String(date.getMonth() + 1).padStart(
          2,
          "0"
        )}-${date.getFullYear()}`;
        doctorData.doctor.dateOfBirth = formattedDate;
      }
      var formData = doctorData.doctor;
      const profileImageData = formData?.profilePicture
        ? `data:image/jpeg;base64,${formData.profilePicture.data}`
        : profileImage;
      setProfileimage(profileImageData);
      setDoctor(doctorData.doctor);
      setInsurance(doctorData.insurances);
      setBlogs(doctorData.blogs);
      setVerificationStatus(doctorData.doctor.verified);
    } catch (error) {
      console.error("Error fetching doctor details:", error);
    }
  };

  useEffect(() => {
    fetchDoctorDetails();
  }, []);

  const getBaseImage = (data) => {
    const base64String = bufferToBase64(data);
    return base64String;
  };

 
  const [isReadMore, setIsReadMore] = useState(true);

  const toggleReadMore = () => {
    setIsReadMore(!isReadMore);
  };
  return (
    <div className="flex flex-col ml-5 w-[70%] max-md:ml-0 max-md:w-full">
      <div className="flex flex-col w-full max-md:mt-8 max-md:max-w-full">
        <section className="flex overflow-hidden flex-col items-start px-10 py-9 w-full text-xs text-black bg-white rounded-xl max-md:px-5 max-md:max-w-full">
          <h2 className="text-2xl font-medium leading-none text-slate-800">
            About
          </h2>
          <div>
            <p className="self-stretch mt-2 text-sm text-black text-opacity-80 max-md:max-w-full">
              {isReadMore ? `${doctor.aboutMe}` : `${doctor.aboutMe}`}
            </p>
            <button
              onClick={toggleReadMore}
              className="text-blue-500  relative bottom-5 left-[90%]"
            >
              {isReadMore ? "Read More" : "Read Less"}
            </button>
          </div>
          <div className="flex gap-2  whitespace-nowrap">
            <img
              loading="lazy"
              src="/DoctorProfile/date.png"
              alt=""
              className="object-contain shrink-0 w-5 aspect-square"
            />
            <span>{doctor?.dateOfBirth?.slice(0, 10)} |</span>

            <img
              loading="lazy"
              src="/DoctorProfile/loc.png"
              alt=""
              className="object-contain shrink-0 w-5 aspect-square"
            />
            <span>{doctor.city}</span>
          </div>
          <div className="flex gap-4 mt-2">
            <img
              loading="lazy"
              src="/DoctorProfile/heartSpecilist.png"
              alt=""
              className="object-contain shrink-0 w-5 aspect-square"
            />
            <span>
              {doctor?.speciality?.map((condition, index) => (
                <span key={index}>
                  {condition}
                  {index < doctor.speciality.length - 1 ? ", " : ""}
                </span>
              ))}
            </span>
          </div>
          <div className="flex gap-4 mt-2">
            <img
              loading="lazy"
              src="/DoctorProfile/heartDisease.png"
              alt=""
              className="object-contain shrink-0 w-5 aspect-square"
            />
            {doctor?.conditions?.map((condition, index) => (
              <span key={index}>
                {condition}
                {index < doctor.conditions.length - 1 ? ", " : ""}
              </span>
            ))}

          
          </div>
          <div className="flex gap-4 mt-2">
            <img
              loading="lazy"
              src="/DoctorProfile/videoConsultamnt.png"
              alt=""
              className="object-contain shrink-0 aspect-square w-[18px]"
            />
            <span>Video consult |</span>

            <span>{doctor?.consultation}</span>
          </div>
          {/* <section className="overflow-hidden py-9 pr-20 pl-10 mt-10 w-full bg-white rounded-xl max-md:px-5 max-md:max-w-full"> */}
          <h2 className="text-xl font-medium leading-none text-slate-800 mt-4">
            Languages
          </h2>
          <div className="flex gap-5 max-md:flex-col">
            {doctor?.languages?.map((language, index) => (
              <div className="flex relative flex-col px-7  text-base leading-loose aspect-[4.2] w-[105px] max-md:pl-5">
                <img
                  loading="lazy"
                  src="/DoctorProfile/righttick.png"
                  alt=""
                  className="object-cover absolute inset-0 size-full h-[16px] w-[16px] mt-2"
                />
                <span className="relative z-10 font-medium text-slate-800 ">
                  {language}
                </span>
              </div>
            ))}
          </div>
          {/* </section> */}
        </section>
        <section className="flex overflow-hidden flex-col px-10 py-9 mt-10 w-full bg-white rounded-xl max-md:px-5 max-md:max-w-full">
          <h2 className="self-start text-2xl font-medium leading-none text-slate-800">
            Locations
          </h2>
          {doctor?.hospitals?.map((location, index) => (
            <div className="flex overflow-hidden flex-wrap gap-5 justify-between px-9 py-6 mt-8 bg-white rounded-xl border border-solid border-blue-600 border-opacity-50 max-md:px-5 max-md:max-w-full">
              <div className="flex flex-col items-start text-xs">
                <div className="flex gap-2.5 self-stretch text-lg font-semibold text-blue-600">
                  <img
                    loading="lazy"
                    src="/DoctorProfile/LocationIcon.png"
                    alt=""
                    className="object-contain shrink-0 aspect-[0.95] w-[19px]"
                  />
                  <div className="grow shrink my-auto w-[297px]">
                    {location.name}
                  </div>
                </div>
                <div className="flex gap-1.5 mt-2">
                  <div className="font-semibold text-slate-800">$12</div>
                  <div className="font-medium text-gray-400 basis-auto">
                    (For Video Consultation)
                  </div>
                </div>
                <div className="flex gap-3.5 mt-8 font-medium">
                  <img
                    loading="lazy"
                    src="/DoctorProfile/Locationbig.png"
                    alt=""
                    className="object-contain shrink-0 rounded-2xl aspect-[0.98] w-[59px]"
                  />
                  <div className="flex flex-row items-start">
                    <div className="self-stretch text-slate-800 w-[140px] py-4">
                      {location.street},{location.city},{location.state}
                    </div>
                    <div className="">
                      <button className="flex gap-2 mt-4 text-[#FF7F50]">
                        <img
                          loading="lazy"
                          src="/DoctorProfile/phone.png"
                          alt=""
                          className="object-contain shrink-0 self-start w-3.5 aspect-square"
                        />
                        <span>Call Now</span>
                      </button>
                      <button className="flex gap-2 mt-2 text-[#FF7F50]">
                        <img
                          loading="lazy"
                          src="/DoctorProfile/direction.png"
                          alt=""
                          className="object-contain shrink-0 w-3.5 aspect-square"
                        />
                        <span>Get Direction</span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <div className="flex flex-col">
                <div className="flex gap-5 justify-between">
                  <div className="flex gap-3 self-start text-sm text-slate-400"></div>
                </div>
                <a
                  href="#"
                  className="gap-2.5 self-end px-5 py-1 mt-20 text-base font-medium leading-loose text-white bg-blue-600 rounded-md min-h-[42px] max-md:mt-10 h-[40px]"
                >
                  Visit website
                </a>
              </div>
            </div>
          ))}
        </section>

        <section className="overflow-hidden py-9 pr-20 pl-10 mt-10 bg-white rounded-xl max-md:px-5 max-md:max-w-full">
          <h2 className="text-2xl font-medium leading-none text-slate-800">
            Accepted insurances
          </h2>
          <div className="flex gap-5 mt-8 max-md:flex-col">
            {doctor?.insurances?.map((i, index) => (
              <div className="flex overflow-hidden flex-col   rounded-xl">
                <img
                  loading="lazy"
                  src={getBaseImage(i)}
                  alt={"insurance-logo"}
                  className=" w-[131px]"
                />
              </div>
            ))}
          </div>
        </section>
        <section className="overflow-hidden py-7 pr-20 pl-9 mt-10 w-full bg-white rounded-xl max-md:px-5 max-md:max-w-full">
          <h2 className="text-2xl font-medium leading-none text-slate-800">
            Awards
          </h2>
          <div className="flex gap-5 mt-7 max-md:flex-col">
            {doctor?.awards?.map((award, index) => (
             <div className="flex overflow-hidden gap-5 px-4 py-3.5 text-base leading-6 bg-blue-50 rounded-xl border border-solid border-blue-600 border-opacity-50 shadow-[0px_4px_3px_rgba(0,0,0,0.04)] h-[82px]">
             <img
               loading="lazy"
               src="/DoctorProfile/Awardcup.png"
               alt="award-image"
               className="object-contain shrink-0 w-20 aspect-square"
             />
             <div className="my-auto font-medium text-slate-800">{award}</div>
           </div>
            ))}
          </div>
        </section>
      </div>
    </div>
  );
};

export default DoctorInfo;
